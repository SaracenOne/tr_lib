#pragma once
#include "tr_misc.hpp"
#include "tr_level.hpp"

static String get_lara_animation_name(size_t p_animation_id, TRLevelFormat p_level_format) {
	switch(p_animation_id) {
		case 0:
			return "run";
		case 1:
			return "walk_forward";
		case 2:
			return "walk_stop_right";
		case 3:
			return "walk_stop_left";
		case 4:
			return "walk_to_run_right";
		case 5:
			return "walk_to_run_left";
		case 6:
			return "run_start";
		case 7:
			return "run_to_walk_right";
		case 8:
			return "run_to_stand_left";
		case 9:
			return "run_to_walk_left";
		case 10:
			return "run_to_stand_right";
		case 11:
			return "stand_still";
		case 12:
			return "turn_right_slow";
		case 13:
			return "turn_left_slow";
		case 14:
			return "jump_forward_land_start_unused";
		case 15:
			return "jump_forward_land_end_unused";
		case 16:
			return "run_jump_right_start";
		case 17:
			return "run_jump_right_continue";
		case 18:
			return "run_jump_left_start";
		case 19:
			return "run_jump_left_continue";
		case 20:
			return "walk_forward_start";
		case 21:
			return "walk_forward_start_continue";
		case 22:
			return "jump_forward_to_freefall";
		case 23:
			return "freefall";
		case 24:
			return "freefall_land";
		case 25:
			return "freefall_land_death";
		case 26:
			return "stand_to_jump_up";
		case 27:
			return "stand_to_jump_up_continue";
		case 28:
			return "jump_up";
		case 29:
			return "jump_up_to_hang_unused";
		case 30:
			return "jump_to_freefall";
		case 31:
			return "jump_to_land";
		case 32:
			return "smash_jump";
		case 33:
			return "smash_jump_continue";
		case 34:
			return "fall_start";
		case 35:
			return "fall";
		case 36:
			return "fall_to_freefall";
		case 37:
			return "hang_to_freefall_unused";
		case 38:
			return "walk_back_end_right";
		case 39:
			return "walk_back_end_left";
		case 40:
			return "walk_back";
		case 41:
			return "walk_back_start";
		case 42:
			return "climb_3click";
		case 43:
			return "climb_3click_end_to_run_unused";
		case 44:
			return "turn_right";
		case 45:
			return "jump_forward_to_freefall_continue";
		case 46:
			return "reach_to_freefall_unused";
		case 47:
			return "roll_alternate_unused";
		case 48:
			return "roll_end_alternate_unused";
		case 49:
			return "jump_forward_end_to_freefall_unused";
		case 50:
			return "climb_2click";
		case 51:
			return "climb_2click_end";
		case 52:
			return "climb_2click_end_to_run";
		case 53:
			return "wall_smash_left";
		case 54:
			return "wall_smash_right";
		case 55:
			return "run_up_step_right";
		case 56:
			return "run_up_step_left";
		case 57:
			return "walk_up_step_right";
		case 58:
			return "walk_up_step_left";
		case 59:
			return "walk_down_left";
		case 60:
			return "walk_down_right";
		case 61:
			return "walk_down_back_left";
		case 62:
			return "walk_down_back_right";
		case 63:
			return "wall_switch_down";
		case 64:
			return "wall_switch_up";
		case 65:
			return "sidestep_left";
		case 66:
			return "sidestep_left_end";
		case 67:
			return "sidestep_right";
		case 68:
			return "sidestep_right_end";
		case 69:
			return "rotate_left";
		case 70:
			return "slide_forward";
		case 71:
			return "slide_forward_end";
		case 72:
			return "slide_forward_stop";
		case 73:
			return "stand_to_jump";
		case 74:
			return "jump_back_start";
		case 75:
			return "jump_back";
		case 76:
			return "jump_forward_start";
		case 77:
			return "jump_forward";
		case 78:
			return "jump_left_start";
		case 79:
			return "jump_left";
		case 80:
			return "jump_right_start";
		case 81:
			return "jump_right";
		case 82:
			return "land";
		case 83:
			return "jump_back_to_freefall";
		case 84:
			return "jump_left_to_freefall";
		case 85:
			return "jump_right_to_freefall";
		case 86:
			return "underwater_swim_forward";
		case 87:
			return "underwater_swim_forward_drift";
		case 88:
			return "small_jump_back_start";
		case 89:
			return "small_jump_back";
		case 90:
			return "small_jump_back_end";
		case 91:
			return "jump_up_start";
		case 92:
			return "land_to_run";
		case 93:
			return "fall_back";
		case 94:
			return "jump_forward_to_reach";
		case 95:
			return "reach";
		case 96:
			return "reach_to_hang";
		case 97:
			return "climb_on";
		case 98:
			return "reach_to_freefall";
		case 99:
			return "fall_crouching_landing_unused";
		case 100:
			return "jump_forward_to_reach_late_unused";
		case 101:
			return "jump_forward_start_to_reach_alternate_unused";
		case 102:
			return "climb_on_end";
		case 103:
			return "stand_idle";
		case 104:
			return "slide_backward_start";
		case 105:
			return "slide_backward";
		case 106:
			return "slide_backward_end";
		case 107:
			return "underwater_swim_to_idle";
		case 108:
			return "underwater_idle";
		case 109:
			return "underwater_idle_to_swim";
		case 110:
			return "on_water_idle";
		case 111:
			return "on_water_to_stand_high";
		case 112:
			return "freefall_to_underwater";
		case 113:
			return "on_water_dive_alternate_unused";
		case 114:
			return "underwater_to_on_water";
		case 115:
			return "on_water_swim_forward_dive_unused";
		case 116:
			return "on_water_swim_forward";
		case 117:
			return "on_water_swim_forward_to_idle";
		case 118:
			return "on_water_idle_to_swim_forward";
		case 119:
			return "on_water_dive";
		case 120:
			return "pushable_grab";
		case 121:
			return "pushable_release";
		case 122:
			return "pushable_pull";
		case 123:
			return "pushable_push";
		case 124:
			return "underwater_death";
		case 125:
			return "hit_front";
		case 126:
			return "hit_back";
		case 127:
			return "hit_left";
		case 128:
			return "hit_right";
		case 129:
			return "underwater_switch";
		case 130:
			return "underwater_pickup";
		case 131:
			return "use_key";
		case 132:
			return "on_water_death";
		case 133:
			return "run_death";
		case 134:
			return "use_puzzle";
		case 135:
			return "pickup";
		case 136:
			return "shimmy_left";
		case 137:
			return "shimmy_right";
		case 138:
			return "stand_death";
		case 139:
			return "boulder_death";
		case 140:
			return "on_water_idle_to_swim_back";
		case 141:
			return "on_water_swim_back";
		case 142:
			return "on_water_swim_back_to_idle";
		case 143:
			return "on_water_swim_left";
		case 144:
			return "on_water_swim_right";
		case 145:
			return "death_jump";
		case 146:
			return "roll_start";
		case 147:
			return "roll_continue";
		case 148:
			return "roll_end";
		case 149:
			return "spike_death";
		case 150:
			return "reach_to_thin_ledge";
		case 151:
			return "swandive_roll";
		case 152:
			return "swandive_to_underwater";
		case 153:
			return "freefall_swandive";
		case 154:
			return "freefall_swandive_to_underwater";
		case 155:
			return "swandive_death";
		case 156:
			return "swandive_left";
		case 157:
			return "swandive_right";
		case 158:
			return "swandive_start";
		case 159:
			return "climb_on_handstand";
		case 160:
			return "stand_to_ladder";
		case 161:
			return "ladder_up";
		case 162:
			return "ladder_up_stop_right";
		case 163:
			return "ladder_up_stop_left";
		case 164:
			return "ladder_idle";
		case 165:
			return "ladder_up_start";
		case 166:
			return "ladder_down_stop_left";
		case 167:
			return "ladder_down_stop_right";
		case 168:
			return "ladder_down";
		case 169:
			return "ladder_down_start";
		case 170:
			return "ladder_right";
		case 171:
			return "ladder_left";
		case 172:
			return "ladder_hang";
		case 173:
			return "ladder_hang_to_idle";
		case 174:
			return "ladder_climb_on";
		case 175:
			return "unknown_1";
		case 176:
			return "on_water_to_wade_shallow_unused";
		case 177:
			return "wade";
		case 178:
			return "run_to_wade_left";
		case 179:
			return "run_to_wade_right";
		case 180:
			return "wade_to_run_left";
		case 181:
			return "wade_to_run_right";
		case 182:
			return "ladder_backflip_start";
		case 183:
			return "ladder_backflip_continue";
		case 184:
			return "wade_to_stand_right";
		case 185:
			return "wade_to_stand_left";
		case 186:
			return "stand_to_wade";
		case 187:
			return "ladder_up_hanging";
		case 188:
			return "ladder_down_hanging";
		case 189:
			return "flare_throw";
		case 190:
			return "on_water_to_wade";
		case 191:
			return "on_water_to_stand_medium";
		case 192:
			return "underwater_to_stand";
		case 193:
			return "on_water_to_wade_low";
		case 194:
			return "ladder_to_hang_down";
		case 195:
			return "switch_small_down";
		case 196:
			return "switch_small_up";
		case 197:
			return "button_push";
		case 198:
			return "underwater_swim_to_still_huddle";
		case 199:
			return "underwater_swim_to_still_sprawl";
		case 200:
			return "underwater_swim_to_still_medium";
		case 201:
			return "ladder_to_hang_right";
		case 202:
			return "ladder_to_hang_left";
		case 203:
			return "underwater_roll_start";
		case 204:
			return "flare_pickup";
		case 205:
			return "underwater_roll_end";
		case 206:
			return "underwater_flare_pickup";
		case 207:
			return "run_jump_roll_start";
		case 208:
			return "somersault";
		case 209:
			return "run_jump_roll_end";
		case 210:
			return "jump_forward_roll_start";
		case 211:
			return "jump_forward_roll_end";
		case 212:
			return "jump_back_roll_start";
		case 213:
			return "jump_back_roll_end";
		case 214:
			if (p_level_format == TR2_PC) {
				return "kick";
			} else {
				return "zipline_grab";
			}
		case 215:
			if (p_level_format == TR2_PC) {
				return "zipline_grab";
			} else {
				return "zipline_ride";
			}
		case 216:
			if (p_level_format == TR2_PC) {
				return "zipline_ride";
			} else {
				return "zipline_fall";
			}
		case 217:
			if (p_level_format == TR2_PC) {
				return "zipline_fall";
			} else {
				return "stand_to_crouch";
			}
		case 218:
			return "crouch_roll_forward_start_unused";
		case 219:
			return "crouch_roll_forward_continue_unused";
		case 220:
			return "crouch_roll_forward_end_unused";
		case 221:
			return "crouch_to_stand";
		case 222:
			return "crouch_idle";
		case 223:
			return "sprint";
		case 224:
			return "run_to_sprint_left";
		case 225:
			return "run_to_sprint_right";
		case 226:
			return "sprint_slide_stand_right";
		case 227:
			return "sprint_slide_stand_right_alternate";
		case 228:
			return "sprint_slide_stand_left";
		case 229:
			return "sprint_slide_stand_left_alternate";
		case 230:
			return "sprint_to_roll_left";
		case 231:
			return "sprint_to_roll_left_beta_unused";
		case 232:
			return "sprint_to_roll_left_to_run";
		case 233:
			return "monkey_grab";
		case 234:
			return "monkey_idle";
		case 235:
			return "monkey_fall";
		case 236:
			return "monkey_forward";
		case 237:
			return "monkey_stop_left";
		case 238:
			return "monkey_stop_right";
		case 239:
			return "monkey_idle_to_forward_left";
		case 240:
			return "sprint_to_roll_alternate_start_unused";
		case 241:
			return "sprint_to_roll_alternate_continue_unused";
		case 242:
			return "sprint_to_roll_alternate_end_unused";
		case 243:
			return "sprint_to_run_left";
		case 244:
			return "sprint_to_run_right";
		case 245:
			return "stand_to_crouch_end";
		case 246:
			return "slide_forward_to_run";
		case 247:
			return "crouch_roll_forward_start_alternate";
		case 248:
			return "jump_forward_start_to_grab_early";
		case 249:
			return "jump_forward_start_to_grab_late";
		case 250:
			return "run_to_grab_right";
		case 251:
			return "run_to_grab_left";
		case 252:
			return "monkey_idle_to_forward_right";
		case 253:
			return "monkey_shimmy_left";
		case 254:
			return "monkey_shimmy_left_end";
		case 255:
			return "monkey_shimmy_right";
		case 256:
			return "monkey_shimmy_right_end";
		case 257:
			return "monkey_turn_around_unused";
		case 258:
			return "crouch_to_crawl_start";
		case 259:
			return "crawl_to_crouch_start";
		case 260:
			return "crawl_forward";
		case 261:
			return "crawl_idle_to_forward";
		case 262:
			return "crawl_forward_to_idle_start_right";
		case 263:
			return "crawl_idle";
		case 264:
			return "crouch_to_crawl_end";
		case 265:
			return "crouch_to_crawl_end_unused";
		case 266:
			return "crawl_forward_to_idle_end_right";
		case 267:
			return "crawl_forward_to_idle_start_left";
		case 268:
			return "crawl_forward_to_idle_end_left";
		case 269:
			return "crawl_turn_left";
		case 270:
			return "crawl_turn_right";
		case 271:
			return "monkey_turn_left";
		case 272:
			return "monkey_turn_right";
		case 273:
			return "crouch_to_crawl_continue";
		case 274:
			return "crawl_to_crouch_continue";
		case 275:
			return "crawl_idle_to_backward";
		case 276:
			return "crawl_backward";
		case 277:
			return "crawl_backward_to_idle_right_start";
		case 278:
			return "crawl_backward_to_idle_right_end";
		case 279:
			return "crawl_backward_to_idle_left_start";
		case 280:
			return "crawl_backward_to_idle_left_end";
		case 281:
			return "crawl_turn_left_early_end";
		case 282:
			return "crawl_turn_right_early_end";
		case 283:
			return "monkey_turn_left_early_end";
		case 284:
			return "monkey_turn_left_late_end";
		case 285:
			return "monkey_turn_right_early_end";
		case 286:
			return "monkey_turn_right_late_end";
		case 287:
			return "hang_to_crouch_start";
		case 288:
			return "hang_to_crouch_end";
		case 289:
			return "crawl_to_hang_start";
		case 290:
			return "crawl_to_hang_continue";
		case 291:
			return "crouch_pickup";
		case 292:
			return "crawl_pickup";
		case 293:
			return "crouch_hit_front";
		case 294:
			return "crouch_hit_back";
		case 295:
			return "crouch_hit_right";
		case 296:
			return "crouch_hit_left";
		case 297:
			return "crawl_hit_front";
		case 298:
			return "crawl_hit_back";
		case 299:
			return "crawl_hit_right";
		case 300:
			return "crawl_hit_left";
		case 301:
			return "crawl_death";
		case 302:
			return "crawl_to_hang_end";
		case 303:
			return "stand_to_crouch_abort_unused";
		case 304:
			return "run_to_crouch_left_start";
		case 305:
			return "run_to_crouch_right_start";
		case 306:
			return "run_to_crouch_left_end";
		case 307:
			return "run_to_crouch_right_end";
		case 308:
			return "sprint_to_roll_right";
		case 309:
			return "sprint_roll_right_to_run";
		case 310:
			return "sprint_to_crouch_left";
		case 311:
			return "sprint_to_crouch_right";
		case 312:
			return "crouch_pickup_flare";
	}
	return String("animation_") + itos(p_animation_id);
}


static String get_lara_bone_name(size_t p_bone_id) {
	switch (p_bone_id) {
		case 0:
			return "Hips";
		case 1:
			return "LeftUpperLeg";
		case 2:
			return "LeftLowerLeg";
		case 3:
			return "LeftFoot";
		case 4:
			return "RightUpperLeg";
		case 5:
			return "RightLowerLeg";
		case 6:
			return "RightFoot";
		case 7:
			return "Spine";
		case 8:
			return "RightUpperArm";
		case 9:
			return "RightLowerArm";
		case 10:
			return "RightHand";
		case 11:
			return "LeftUpperArm";
		case 12:
			return "LeftLowerArm";
		case 13:
			return "LeftHand";
		case 14:
			return "Head";
	}
	return String("bone_") + itos(p_bone_id);
}

#include "tr_names_tr1.hpp"
#include "tr_names_tr2.hpp"
#include "tr_names_tr3.hpp"
#include "tr_names_tr4.hpp"

static String get_type_info_name(uint32_t p_type_info_id, TRLevelFormat p_level_format) {
	switch(p_level_format) {
	case TRLevelFormat::TR1_PC:
		return get_tr1_type_info_name(p_type_info_id);
	case TRLevelFormat::TR2_PC:
		return get_tr2_type_info_name(p_type_info_id);
	case TRLevelFormat::TR3_PC:
		return get_tr3_type_info_name(p_type_info_id);
	case TRLevelFormat::TR4_PC:
		return get_tr4_type_info_name(p_type_info_id);
	default:
		return String("MovableInfo_") + itos(p_type_info_id);
	}
}

static String get_bone_name(uint32_t p_type_info_id, uint32_t p_bone_id, TRLevelFormat p_level_format) {
	if (is_lara_compatible_humanoid(p_type_info_id, p_level_format)) {
		return get_lara_bone_name(p_bone_id);
	}

	switch (p_level_format) {
		case TRLevelFormat::TR1_PC:
			return get_tr1_bone_name(p_type_info_id, p_bone_id);
		case TRLevelFormat::TR2_PC:
			return get_tr2_bone_name(p_type_info_id, p_bone_id);
		case TRLevelFormat::TR3_PC:
			return get_tr3_bone_name(p_type_info_id, p_bone_id);
		case TRLevelFormat::TR4_PC:
			return get_tr4_bone_name(p_type_info_id, p_bone_id);
		default:
			return String("bone_") + itos(p_bone_id);
	}
}

static String get_animation_name(uint32_t p_type_info_id, uint32_t p_animation_id, TRLevelFormat p_level_format) {
	switch (p_level_format) {
		case TRLevelFormat::TR1_PC:
			return get_tr1_animation_name(p_type_info_id, p_animation_id);
		case TRLevelFormat::TR2_PC:
			return get_tr2_animation_name(p_type_info_id, p_animation_id);
		case TRLevelFormat::TR3_PC:
			return get_tr3_animation_name(p_type_info_id, p_animation_id);
		case TRLevelFormat::TR4_PC:
			return get_tr4_animation_name(p_type_info_id, p_animation_id);
		default:
			return String("animation_") + itos(p_animation_id);
	}
}